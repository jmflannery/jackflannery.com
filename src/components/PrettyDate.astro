---
import {
  format,
  isToday,
  isYesterday,
  isThisWeek,
  differenceInDays,
  parseISO,
} from 'date-fns';

interface Props {
  date: string;
}

const formatDate = (date: Date) => {
  if (isToday(date)) {
    return 'Today';
  } else if (isYesterday(date)) {
    return 'Yesterday';
  } else if (isThisWeek(date)) {
    return format(date, 'EEEE'); // Full day name
  } else if (differenceInDays(new Date(), date) >= 7) {
    return format(date, 'yyyy MMMM d'); // e.g., "June 12, 2024"
  } else {
    return format(date, 'MMMM d'); // e.g., "June 12"
  }
};

const {date} = Astro.props as Props;

const formattedDate = date ? formatDate(parseISO(date)) : null;
---

{formattedDate && <time datetime={date}>{formattedDate}</time>}

<style>
  time {
    font-family: var(--font-mono);
    font-weight: 300;
  }
</style>
